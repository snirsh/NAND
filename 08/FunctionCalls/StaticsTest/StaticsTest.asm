@256
D=A
@SP
M=D
//STARTING CALL
@return_addr.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(return_addr.0)
(global.Class1.set)
//PUSHING: argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POPPING: static 0
@Class133.0
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
//PUSHING: argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POPPING: static 1
@Class133.1
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
//PUSHING: constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
@5
D=A
@LCL
A=M-D
D=M
@R13
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
A=A+1
D=A
@SP
M=D
@LCL
A=M-1
D=M
@THAT
M=D
@2
D=A
@LCL
A=M-D
D=M
@THIS
M=D
@3
D=A
@LCL
A=M-D
D=M
@ARG
M=D
@4
D=A
@LCL
A=M-D
D=M
@LCL
M=D
@R13
A=M
0;JMP
(Class1.set.Class1.get)
//PUSHING: static 0
@Class133.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSHING: static 1
@Class133.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//BINARY OP:sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//RETURNING
@5
D=A
@LCL
A=M-D
D=M
@R13
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
A=A+1
D=A
@SP
M=D
@LCL
A=M-1
D=M
@THAT
M=D
@2
D=A
@LCL
A=M-D
D=M
@THIS
M=D
@3
D=A
@LCL
A=M-D
D=M
@ARG
M=D
@4
D=A
@LCL
A=M-D
D=M
@LCL
M=D
@R13
A=M
0;JMP
(Class1.get.Class2.set)
//PUSHING: argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POPPING: static 0
@Class1333.0
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
//PUSHING: argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//POPPING: static 1
@Class1333.1
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
//PUSHING: constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//RETURNING
@5
D=A
@LCL
A=M-D
D=M
@R13
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
A=A+1
D=A
@SP
M=D
@LCL
A=M-1
D=M
@THAT
M=D
@2
D=A
@LCL
A=M-D
D=M
@THIS
M=D
@3
D=A
@LCL
A=M-D
D=M
@ARG
M=D
@4
D=A
@LCL
A=M-D
D=M
@LCL
M=D
@R13
A=M
0;JMP
(Class2.set.Class2.get)
//PUSHING: static 0
@Class1333.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//PUSHING: static 1
@Class1333.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//BINARY OP:sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//RETURNING
@5
D=A
@LCL
A=M-D
D=M
@R13
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
A=A+1
D=A
@SP
M=D
@LCL
A=M-1
D=M
@THAT
M=D
@2
D=A
@LCL
A=M-D
D=M
@THIS
M=D
@3
D=A
@LCL
A=M-D
D=M
@ARG
M=D
@4
D=A
@LCL
A=M-D
D=M
@LCL
M=D
@R13
A=M
0;JMP
(Sys.init)
//PUSHING: constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSHING: constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//STARTING CALL
@return_addr.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@7
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(return_addr.1)
//POPPING: temp 0
@5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
//PUSHING: constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
//PUSHING: constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//STARTING CALL
@return_addr.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@7
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(return_addr.2)
//POPPING: temp 0
@5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
//STARTING CALL
@return_addr.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(return_addr.3)
//STARTING CALL
@return_addr.4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(return_addr.4)
(Sys.init.WHILE)
@Sys.init.WHILE
0;JMP
