snirsh
===============================================================================
Snir Sharristh, ID 305500001, snir.sharristh@cs.huji.ac.il
===============================================================================

				   Project 10: Compiler I - Syntax Analysis
				   ----------------------------------------

Submitted Files
---------------
README 	- This file.
JackAnalyzer.py -       Takes in users input path and compiles the files using the CompilationEngine.
JackAnalyzer -          A simple Python3 executer for the analyzer
CompilationEngine.py -  Effects the actual compilation output. Gets its input from a JackTokenizer and emits its parsed
                        structure into an Ouput file /stream. the output is generated by a series of compilexxx()
                        routines, one for every syntactic element xxx of the Jack grammer. The contract between these
                        routines is that each compilexxx() routine should read the syntactic construct xxx from the
                        input, advance() the tokenizer exactly beyond xxx, and output the parsing of xxx. Thus,
                        compilexxx() may only be called if indeed xxx is the next syntactic element of the input.
JackTokenizer.py -      Removes all comments and white space from the input stream and breaks it into Jack-language tokens, as specified by  #
                        the Jack grammar.
Makefile -          a simple makefile for my python file. also has a tar clean and test options

Remarks
-------
* Changed abit the architecture of how the tokenizer and the engine work together
* Stream isn't tested.
* few problems with Expression list and ParamList.