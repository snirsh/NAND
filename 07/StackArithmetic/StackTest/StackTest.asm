@13
M=0
@14
M=0
@15
M=0
@13
M=0
@14
M=0
@15
M=0
//PUSHING: constant 17
@17
D=A
@SP
M=M+1
A=M-1
M=D
//PUSHING: constant 17
@17
D=A
@SP
M=M+1
A=M-1
M=D
//COMP OP:eq
//CHECKING VALIDITY OF EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@IF.StackTest1
D;JEQ
@SP
A=M-1
M=0
@ELSE.StackTest1
0;JMP
(IF.StackTest1)
@SP
A=M-1
M=-1
(ELSE.StackTest1)
//PUSHING: constant 17
@17
D=A
@SP
M=M+1
A=M-1
M=D
//PUSHING: constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//COMP OP:eq
//CHECKING VALIDITY OF EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@IF.StackTest2
D;JEQ
@SP
A=M-1
M=0
@ELSE.StackTest2
0;JMP
(IF.StackTest2)
@SP
A=M-1
M=-1
(ELSE.StackTest2)
//PUSHING: constant 16
@16
D=A
@SP
M=M+1
A=M-1
M=D
//PUSHING: constant 17
@17
D=A
@SP
M=M+1
A=M-1
M=D
//COMP OP:eq
//CHECKING VALIDITY OF EQ
@SP
AM=M-1
D=M
A=A-1
D=M-D
@IF.StackTest3
D;JEQ
@SP
A=M-1
M=0
@ELSE.StackTest3
0;JMP
(IF.StackTest3)
@SP
A=M-1
M=-1
(ELSE.StackTest3)
//PUSHING: constant 892
@892
D=A
@SP
M=M+1
A=M-1
M=D
//PUSHING: constant 891
@891
D=A
@SP
M=M+1
A=M-1
M=D
//COMP OP:lt
//CHECKING FOR OVERFLOW ON CMD
@SP
AM=M-1
D=M
@R14
M=D
@FNEG.StackTest4
D;JLT
@SP
A=M-1
D=M
@SNEG.StackTest4
D;JLT
@CHCK.StackTest4
0;JMP
(FNEG.StackTest4)
@SP
A=M-1
D=M
@SPOS.StackTest4
D;JGT
@CHCK.StackTest4
0;JMP
(SPOS.StackTest4)
@R2
D=A
@ANS.StackTest4
0;JMP
(SNEG.StackTest4)
@R2
D=-A
@ANS.StackTest4
0;JMP
(CHCK.StackTest4)
@R14
D=D-M
(ANS.StackTest4)
@IF.StackTest4
D;JLT
@SP
A=M-1
M=0
@ELSE.StackTest4
0;JMP
(IF.StackTest4)
@SP
A=M-1
M=-1
(ELSE.StackTest4)
//PUSHING: constant 891
@891
D=A
@SP
M=M+1
A=M-1
M=D
//PUSHING: constant 892
@892
D=A
@SP
M=M+1
A=M-1
M=D
//COMP OP:lt
//CHECKING FOR OVERFLOW ON CMD
@SP
AM=M-1
D=M
@R14
M=D
@FNEG.StackTest5
D;JLT
@SP
A=M-1
D=M
@SNEG.StackTest5
D;JLT
@CHCK.StackTest5
0;JMP
(FNEG.StackTest5)
@SP
A=M-1
D=M
@SPOS.StackTest5
D;JGT
@CHCK.StackTest5
0;JMP
(SPOS.StackTest5)
@R2
D=A
@ANS.StackTest5
0;JMP
(SNEG.StackTest5)
@R2
D=-A
@ANS.StackTest5
0;JMP
(CHCK.StackTest5)
@R14
D=D-M
(ANS.StackTest5)
@IF.StackTest5
D;JLT
@SP
A=M-1
M=0
@ELSE.StackTest5
0;JMP
(IF.StackTest5)
@SP
A=M-1
M=-1
(ELSE.StackTest5)
//PUSHING: constant 891
@891
D=A
@SP
M=M+1
A=M-1
M=D
//PUSHING: constant 891
@891
D=A
@SP
M=M+1
A=M-1
M=D
//COMP OP:lt
//CHECKING FOR OVERFLOW ON CMD
@SP
AM=M-1
D=M
@R14
M=D
@FNEG.StackTest6
D;JLT
@SP
A=M-1
D=M
@SNEG.StackTest6
D;JLT
@CHCK.StackTest6
0;JMP
(FNEG.StackTest6)
@SP
A=M-1
D=M
@SPOS.StackTest6
D;JGT
@CHCK.StackTest6
0;JMP
(SPOS.StackTest6)
@R2
D=A
@ANS.StackTest6
0;JMP
(SNEG.StackTest6)
@R2
D=-A
@ANS.StackTest6
0;JMP
(CHCK.StackTest6)
@R14
D=D-M
(ANS.StackTest6)
@IF.StackTest6
D;JLT
@SP
A=M-1
M=0
@ELSE.StackTest6
0;JMP
(IF.StackTest6)
@SP
A=M-1
M=-1
(ELSE.StackTest6)
//PUSHING: constant 32767
@32767
D=A
@SP
M=M+1
A=M-1
M=D
//PUSHING: constant 32766
@32766
D=A
@SP
M=M+1
A=M-1
M=D
//COMP OP:gt
//CHECKING FOR OVERFLOW ON CMD
@SP
AM=M-1
D=M
@R14
M=D
@FNEG.StackTest7
D;JLT
@SP
A=M-1
D=M
@SNEG.StackTest7
D;JLT
@CHCK.StackTest7
0;JMP
(FNEG.StackTest7)
@SP
A=M-1
D=M
@SPOS.StackTest7
D;JGT
@CHCK.StackTest7
0;JMP
(SPOS.StackTest7)
@R2
D=A
@ANS.StackTest7
0;JMP
(SNEG.StackTest7)
@R2
D=-A
@ANS.StackTest7
0;JMP
(CHCK.StackTest7)
@R14
D=D-M
(ANS.StackTest7)
@IF.StackTest7
D;JGT
@SP
A=M-1
M=0
@ELSE.StackTest7
0;JMP
(IF.StackTest7)
@SP
A=M-1
M=-1
(ELSE.StackTest7)
//PUSHING: constant 32766
@32766
D=A
@SP
M=M+1
A=M-1
M=D
//PUSHING: constant 32767
@32767
D=A
@SP
M=M+1
A=M-1
M=D
//COMP OP:gt
//CHECKING FOR OVERFLOW ON CMD
@SP
AM=M-1
D=M
@R14
M=D
@FNEG.StackTest8
D;JLT
@SP
A=M-1
D=M
@SNEG.StackTest8
D;JLT
@CHCK.StackTest8
0;JMP
(FNEG.StackTest8)
@SP
A=M-1
D=M
@SPOS.StackTest8
D;JGT
@CHCK.StackTest8
0;JMP
(SPOS.StackTest8)
@R2
D=A
@ANS.StackTest8
0;JMP
(SNEG.StackTest8)
@R2
D=-A
@ANS.StackTest8
0;JMP
(CHCK.StackTest8)
@R14
D=D-M
(ANS.StackTest8)
@IF.StackTest8
D;JGT
@SP
A=M-1
M=0
@ELSE.StackTest8
0;JMP
(IF.StackTest8)
@SP
A=M-1
M=-1
(ELSE.StackTest8)
//PUSHING: constant 32766
@32766
D=A
@SP
M=M+1
A=M-1
M=D
//PUSHING: constant 32766
@32766
D=A
@SP
M=M+1
A=M-1
M=D
//COMP OP:gt
//CHECKING FOR OVERFLOW ON CMD
@SP
AM=M-1
D=M
@R14
M=D
@FNEG.StackTest9
D;JLT
@SP
A=M-1
D=M
@SNEG.StackTest9
D;JLT
@CHCK.StackTest9
0;JMP
(FNEG.StackTest9)
@SP
A=M-1
D=M
@SPOS.StackTest9
D;JGT
@CHCK.StackTest9
0;JMP
(SPOS.StackTest9)
@R2
D=A
@ANS.StackTest9
0;JMP
(SNEG.StackTest9)
@R2
D=-A
@ANS.StackTest9
0;JMP
(CHCK.StackTest9)
@R14
D=D-M
(ANS.StackTest9)
@IF.StackTest9
D;JGT
@SP
A=M-1
M=0
@ELSE.StackTest9
0;JMP
(IF.StackTest9)
@SP
A=M-1
M=-1
(ELSE.StackTest9)
//PUSHING: constant 57
@57
D=A
@SP
M=M+1
A=M-1
M=D
//PUSHING: constant 31
@31
D=A
@SP
M=M+1
A=M-1
M=D
//PUSHING: constant 53
@53
D=A
@SP
M=M+1
A=M-1
M=D
//BINARY OP:add
@SP
AM=M-1
D=M
A=A-1
M=M+D
//PUSHING: constant 112
@112
D=A
@SP
M=M+1
A=M-1
M=D
//BINARY OP:sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//UNARY OP:neg
D=0
@SP
A=M-1
M=D-M
//BINARY OP:and
@SP
AM=M-1
D=M
A=A-1
M=M&D
//PUSHING: constant 82
@82
D=A
@SP
M=M+1
A=M-1
M=D
//BINARY OP:or
@SP
AM=M-1
D=M
A=A-1
M=M|D
//UNARY OP:not
@SP
A=M-1
M=!M
